plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // id 'com.google.gms.google-services'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.burning.timer100"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.burning.timer100"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23                                                                          
        targetSdk = flutter.targetSdkVersion
  
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        resValue "string", "facebook_app_id", keystoreProperties['facebookAppId']
        resValue "string", "facebook_client_token", keystoreProperties['facebookClientToken']
        resValue "string", "fb_login_protocol_scheme", "fb${keystoreProperties['facebookAppId']}"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }

    configurations.all {
        resolutionStrategy {
            // appcompat 버전 고정
            force 'androidx.appcompat:appcompat:1.6.1'
            force 'androidx.appcompat:appcompat-resources:1.6.1'
            
            // error_prone_annotations 버전 고정 (이전 오류에서 발생)
            force 'com.google.errorprone:error_prone_annotations:2.20.0'
            
            // awesome_notifications와 충돌하는 다른 라이브러리 고정
            force 'androidx.lifecycle:lifecycle-runtime:2.6.1'

            force "androidx.core:core:1.13.1"
            force "androidx.core:core-ktx:1.13.1"
        }
    }

    // dexing 문제 해결
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    dependencies {
        implementation "com.google.android.gms:play-services-ads:24.1.0"
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "com.google.android.gms:play-services-ads:24.1.0"
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'com.android.billingclient:billing:5.0.0'

        constraints {
            implementation("androidx.core:core:1.13.1")
            implementation("androidx.core:core-ktx:1.13.1")
        }
    }   

}

flutter {
    source = "../.."
}
