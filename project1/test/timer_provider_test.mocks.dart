// Mocks generated by Mockito 5.4.4 from annotations
// in project1/test/timer_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:project1/utils/database_service.dart' as _i3;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<void> createTimer(
    String? userId,
    Map<String, dynamic>? timerData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTimer,
          [
            userId,
            timerData,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteTimer(
    String? timerId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTimer,
          [
            timerId,
            userId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateTimer(
    String? timerId,
    String? userId,
    Map<String, dynamic>? updatedData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTimer,
          [
            timerId,
            userId,
            updatedData,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getTimer(
    String? userId,
    String? weekStart,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTimer,
          [
            userId,
            weekStart,
          ],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<void> initializeActivityList(
    _i2.Database? db,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeActivityList,
          [
            db,
            userId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addActivityList(
    String? userId,
    String? activityName,
    String? activityIcon,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addActivityList,
          [
            userId,
            activityName,
            activityIcon,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateActivityList(
    String? activityListId,
    String? newActivityName,
    String? newActivityIcon,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivityList,
          [
            activityListId,
            newActivityName,
            newActivityIcon,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isActivityNameDuplicate(
    String? userId,
    String? activityName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isActivityNameDuplicate,
          [
            userId,
            activityName,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> deleteActivity(String? activityListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteActivity,
          [activityListId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getActivityList(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityList,
          [userId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getActivityById(
          String? activityListId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityById,
          [activityListId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<String?> getActivityListIdByName(
    String? userId,
    String? activityName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityListIdByName,
          [
            userId,
            activityName,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> createActivityLog(
    String? activityId,
    String? timerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createActivityLog,
          [
            activityId,
            timerId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateActivityLog(
    String? activityLogId, {
    required bool? resetEndTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivityLog,
          [activityLogId],
          {#resetEndTime: resetEndTime},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> getActivityLog(String? activityLogId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityLog,
          [activityLogId],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<Map<String, dynamic>?> getLastActivityLog(String? timerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastActivityLog,
          [timerId],
        ),
        returnValue: _i4.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i4.Future<Map<String, dynamic>?>.value(),
      ) as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getAllActivityLogs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllActivityLogs,
          [],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> deleteActivityLog(String? activityLogId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteActivityLog,
          [activityLogId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getActivityLogsForCurrentWeek(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActivityLogsForCurrentWeek,
          [userId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);
}
